<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.4</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.polarbookshop</groupId>
	<artifactId>order-service</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>order-service</name>
	<description>Provides functionality for purchasing books</description>
	<properties>
		<java.version>11</java.version>
		<testcontainers.version>1.16.2</testcontainers.version>
		<spring-cloud.version>2021.0.1</spring-cloud.version>
		<lombok.version>1.18.22</lombok.version>
		<!--suppress UnresolvedMavenProperty -->
		<registryUsername>${REGISTRY_USERNAME}</registryUsername>
		<!--suppress UnresolvedMavenProperty -->
		<registryToken>${REGISTRY_TOKEN}</registryToken>
		<!--suppress UnresolvedMavenProperty -->
		<registryUrl>${REGISTRY_URL}</registryUrl>
		<!--suppress UnresolvedMavenProperty -->
		<imageVersion>${project.version}</imageVersion>
		<jib-maven-plugin.version>3.2.1</jib-maven-plugin.version>
		<json.version>20180130</json.version>
		<spring-boot-maven-plugin.version>2.6.1</spring-boot-maven-plugin.version>
		<jacoco-maven-plugin.version>0.8.4</jacoco-maven-plugin.version>
		<spring-cloud-starter-contract-stub-runner.version>3.1.1</spring-cloud-starter-contract-stub-runner.version>
		<sonar-maven-plugin.version>3.6.0.1398</sonar-maven-plugin.version>
		<maven-release-plugin.version>2.5.3</maven-release-plugin.version>
		<sonar.exclusions>
			**/dto/**,
			**/domain/**,
			**/converters/**,
			**/events/**,
			**/entity/**,
			**/*Application.*,
			**/*Config.*,
			**/*Properties.*,
			**/client/*,
			**/vo/*,
			**/*exception/*
		</sonar.exclusions>
		<sonar.coverage.jacoco.xmlReportPaths>../target/site/jacoco-aggregate/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>


		<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.jacoco.reportPath>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPath>
	</properties>

	<scm>
		<connection>scm:git:${project.scm.url}</connection>
		<developerConnection>scm:git:${project.scm.url}</developerConnection>
		<url>git@github.com:springcloudnative/order-service.git</url>
		<tag>v@{imageVersion}</tag>
	</scm>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers-bom</artifactId>
				<version>${testcontainers.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-r2dbc</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.retry</groupId>
			<artifactId>spring-retry</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>dev.miku</groupId>
			<artifactId>r2dbc-mysql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>

		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>${json.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>com.vaadin.external.google</groupId>
					<artifactId>android-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-stream-kafka</artifactId>
		</dependency>

		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>1.15.3</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>mysql</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>r2dbc</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>mockwebserver</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-inline</artifactId>
			<version>3.6.28</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream</artifactId>
			<type>test-jar</type>
			<classifier>test-binder</classifier>
		</dependency>

		<dependency>
			<groupId>com.google.cloud.tools</groupId>
			<artifactId>jib-maven-plugin</artifactId>
			<version>${jib-maven-plugin.version}</version>
			<type>maven-plugin</type>
		</dependency>

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.5.2</version>
		</dependency>
		<!-- Thanks for using https://jar-download.com -->

	</dependencies>

	<build>
		<extensions>
			<extension>
				<groupId>io.packagecloud.maven.wagon</groupId>
				<artifactId>maven-packagecloud-wagon</artifactId>
				<version>0.0.6</version>
			</extension>
		</extensions>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
						<configuration>
							<propertyName>failsafeArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/site/jacoco-it</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>merge-unit-and-integration</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>merge</goal>
						</goals>
						<configuration>
							<fileSets>
								<fileSet>
									<directory>${project.build.directory}</directory>
									<includes>
										<include>*.exec</include>
									</includes>
								</fileSet>
							</fileSets>
							<destFile>${project.build.directory}/jacoco-merged.exec</destFile>
						</configuration>
					</execution>
					<execution>
						<id>create-merged-report</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco-merged.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-merged</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!--This profile is used to deploy the application to the local K8 cluster using Skaffold-->
		<profile>
			<id>jib</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.google.cloud.tools</groupId>
						<artifactId>jib-maven-plugin</artifactId>
						<version>${jib-maven-plugin.version}</version>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<container>
								<ports>
									<port>9002</port>
								</ports>
								<jvmFlags>
									<jvmFlag>-DskipTests</jvmFlag>
									<jvmFlag>-Dspring.profiles.active=mysqldev</jvmFlag>
								</jvmFlags>
							</container>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>remote</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>!imageVersion</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<layers>
								<enabled>true</enabled>
							</layers>
							<image>
								<name>${registryUsername}/${project.name}:${imageVersion}</name>
								<publish>true</publish>
								<env>
									<BP_JVM_VERSION>11</BP_JVM_VERSION>
								</env>
							</image>
							<docker>
								<builderRegistry>
									<username>${registryUsername}</username>
									<password>${registryToken}</password>
									<url>${registryUrl}</url>
								</builderRegistry>
								<publishRegistry>
									<username>${registryUsername}</username>
									<password>${registryToken}</password>
									<url>${registryUrl}</url>
								</publishRegistry>
							</docker>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>build-image</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- This profile does two things - with build-helper-maven-plugin it enables Maven
		to find integration tests classes located in a separated directory - src/integration-test/java.
		And with maven-failsafe-plugin it enables to run integration tests.-->
		<profile>
			<id>integration-test</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>${build-helper-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>add-integration-test-sources</id>
								<phase>generate-test-sources</phase>
								<goals>
									<goal>add-test-source</goal>
								</goals>
								<configuration>
									<sources>
										<source>src/integration-test/java</source>
									</sources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${maven-failsafe-plugin.version}</version>
						<executions>
							<execution>
								<id>failsafe-integration-tests</id>
								<phase>integration-test</phase>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
								<configuration>
									<skipTests>false</skipTests>
									<includes>
										<include>**/*IT</include>
									</includes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>release</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>!imageVersion</name>
				</property>
			</activation>
			<build>
				<plugins>
					<!--We need to disable the default deploy plugin as we're use the Spotify Docker plugin.
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-deploy-plugin</artifactId>
						<version>2.8.2</version>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-release-plugin</artifactId>
						<version>2.5.3</version>
						<configuration>
							<tagNameFormat>v@{imageVersion}</tagNameFormat>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
